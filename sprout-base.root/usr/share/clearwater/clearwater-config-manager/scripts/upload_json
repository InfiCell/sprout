#!/bin/bash

# Project Clearwater - IMS in the Cloud
# Copyright (C) 2015  Metaswitch Networks Ltd
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your
# option) any later version, along with the "Special Exception" for use of
# the program along with SSL, set forth below. This program is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details. You should have received a copy of the GNU General Public
# License along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#
# The author can be reached by email at clearwater@metaswitch.com or by
# post at Metaswitch Networks Ltd, 100 Church St, Enfield EN2 6BQ, UK
#
# Special Exception
# Metaswitch Networks Ltd  grants you permission to copy, modify,
# propagate, and distribute a work formed by combining OpenSSL with The
# Software, or a work derivative of such a combination, even if such
# copying, modification, propagation, or distribution would otherwise
# violate the terms of the GPL. You must comply with the GPL in all
# respects for all of the code used other than OpenSSL.
# "OpenSSL" means OpenSSL toolkit software distributed by the OpenSSL
# Project and licensed under the OpenSSL Licenses, or a work based on such
# software and licensed under the OpenSSL Licenses.
# "OpenSSL Licenses" means the OpenSSL License and Original SSLeay License
# under which the OpenSSL Project distributes the OpenSSL toolkit software,
# as those licenses appear in the file LICENSE-OPENSSL.

CONFPATH=/etc/clearwater
FILENAME=$1
KEY=$2
ALLOW_LARGE_UPLOADS =$3

function usage() {
  echo "Usage: upload_json <filename> <key>"
}

if [[ $1 == "" || $2 == "" ]]
then
  usage
  exit 2
fi

# Check we can contact `etcd`
local_site_name=site1
. /etc/clearwater/config
nc -z ${management_local_ip:-$local_ip} 4000
if [[ $? != 0 ]]
then
  echo "The Clearwater Configuration store (etcd) is not running"
  echo "Please start it before uploading configuration"
  exit 2
fi

# Check that the file is already present. The config file should either be put
# in place by the user, or created by the plugin at startup if it finds both
# the file and etcd key missing. If it does not exist, the disk may have been
# full, or some other error may have occured.
if [[ ! -f $CONFPATH/$FILENAME ]]
then
  echo "No configuration file at $CONFPATH/$FILENAME, unable to upload"
  exit 2
fi

# Reject file that is too large for etcd. But allow larger file if the script is
# called with --allow-large, so that the wrapper script is backward compatible.
# All scripts calling this function will pass the optional argument directly to
# this function to check if it's --allow-large
uploadsize=10000
filesize=$(wc -c <"$CONFPATH/$FILENAME")
if [[ $filesize -ge $uploadsize && $MODE != "--allow-large" ]]
then
  echo "File is larger than the recommended size $uploadsize bytes, use --allow-large if you want to upload"
  exit 2
fi

# Upload the file to etcd
keypath=http://${management_local_ip:-$local_ip}:4000/v2/keys/clearwater/$local_site_name/configuration/$KEY
curl -X PUT $keypath --data-urlencode value@$CONFPATH/$FILENAME 2> /tmp/upload-json-file.stderr.$$ | tee /tmp/upload-json-file.stdout.$$ | egrep -q "\"action\":\"set\""
rc=$?

# Check the return code and log if appropriate.
if [ $rc != 0 ] ; then
  echo Upload JSON configuration file failed to $keypath  >&2
  cat /tmp/upload-json-file.stderr.$$                     >&2
  cat /tmp/upload-json-file.stdout.$$                     >&2
fi
rm -f /tmp/upload-json-file.stderr.$$ /tmp/upload-json-file.stdout.$$

exit $rc
